{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ak/Desktop/CV/avo/frontend/src/videocapture.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport Webcam from 'react-webcam';\nexport const WebcamStreamCapture = () => {\n  _s();\n\n  const webcamRef = React.useRef(null);\n  const mediaRecorderRef = React.useRef(null);\n  const [capturing, setCapturing] = React.useState(false);\n  const [recordedChunks, setRecordedChunks] = React.useState([]);\n  const handleStartCaptureClick = React.useCallback(() => {\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: \"video/webm\"\n    });\n    mediaRecorderRef.current.addEventListener(\"dataavailable\", handleDataAvailable);\n    mediaRecorderRef.current.start();\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\n  const handleDataAvailable = React.useCallback(({\n    data\n  }) => {\n    if (data.size > 0) {\n      console.log(data);\n      setRecordedChunks(prev => prev.concat(data));\n    }\n  }, [setRecordedChunks]);\n  const handleStopCaptureClick = React.useCallback(() => {\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n  }, [mediaRecorderRef, webcamRef, setCapturing]);\n  const handleDownload = React.useCallback(() => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: \"video/webm\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = url;\n      a.download = \"react-webcam-stream-capture.webm\";\n      a.click();\n      window.URL.revokeObjectURL(url);\n      setRecordedChunks([]);\n    }\n  }, [recordedChunks]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), capturing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopCaptureClick,\n      children: \"Stop Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartCaptureClick,\n      children: \"Start Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), recordedChunks.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WebcamStreamCapture, \"j/V0OZynMc4Y6+wWby8fkPCeLGE=\");\n\n_c = WebcamStreamCapture;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebcamStreamCapture\");","map":{"version":3,"sources":["/Users/ak/Desktop/CV/avo/frontend/src/videocapture.js"],"names":["React","useCallback","useRef","useState","Webcam","WebcamStreamCapture","webcamRef","mediaRecorderRef","capturing","setCapturing","recordedChunks","setRecordedChunks","handleStartCaptureClick","current","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","start","data","size","console","log","prev","concat","handleStopCaptureClick","stop","handleDownload","length","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","body","appendChild","style","href","download","click","window","revokeObjectURL"],"mappings":"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","sourcesContent":["import React, {useCallback, useRef, useState} from 'react'\nimport Webcam from 'react-webcam'\n\nexport const WebcamStreamCapture = () => {\n    const webcamRef = React.useRef(null);\n    const mediaRecorderRef = React.useRef(null);\n    const [capturing, setCapturing] = React.useState(false);\n    const [recordedChunks, setRecordedChunks] = React.useState([]);\n  \n    const handleStartCaptureClick = React.useCallback(() => {\n      setCapturing(true);\n      mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n        mimeType: \"video/webm\"\n      });\n      mediaRecorderRef.current.addEventListener(\n        \"dataavailable\",\n        handleDataAvailable\n      );\n      mediaRecorderRef.current.start();\n    }, [webcamRef, setCapturing, mediaRecorderRef]);\n  \n    const handleDataAvailable = React.useCallback(\n      ({ data }) => {\n        if (data.size > 0) {\n          console.log(data)\n          setRecordedChunks((prev) => prev.concat(data));\n        }\n      },\n      [setRecordedChunks]\n    );\n  \n    const handleStopCaptureClick = React.useCallback(() => {\n      mediaRecorderRef.current.stop();\n      setCapturing(false);\n    }, [mediaRecorderRef, webcamRef, setCapturing]);\n  \n    const handleDownload = React.useCallback(() => {\n      if (recordedChunks.length) {\n        const blob = new Blob(recordedChunks, {\n          type: \"video/webm\"\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.style = \"display: none\";\n        a.href = url;\n        a.download = \"react-webcam-stream-capture.webm\";\n        a.click();\n        window.URL.revokeObjectURL(url);\n        setRecordedChunks([]);\n      }\n    }, [recordedChunks]);\n  \n    return (\n      <>\n        <Webcam audio={false} ref={webcamRef} />\n        {capturing ? (\n          <button onClick={handleStopCaptureClick}>Stop Capture</button>\n        ) : (\n          <button onClick={handleStartCaptureClick}>Start Capture</button>\n        )}\n        {recordedChunks.length > 0 && (\n          <button onClick={handleDownload}>Download</button>\n        )}\n      </>\n    );\n  };"]},"metadata":{},"sourceType":"module"}