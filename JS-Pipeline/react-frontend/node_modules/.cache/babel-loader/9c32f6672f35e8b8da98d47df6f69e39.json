{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ak/Desktop/CV/avo/frontend/src/webcam.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useRef, useState } from 'react';\nimport Webcam from 'react-webcam';\nexport const WebcamCapture = props => {\n  _s();\n\n  const webcamRef = useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  const capture = useCallback(() => {\n    // for(let i=0; i<10000; i++){\n    const imageSrc = webcamRef.current.getScreenshot(); // console.log(imageSrc)\n    // setImgSrc(imageSrc);\n\n    props.client.send(imageSrc); // }\n    // convertURIToImageData(imageSrc).then(function(imageData) {\n    //     // Here you can use imageData\n    //     console.log(imageData);\n    //     props.client.send(JSON.stringify({\"image\":imageData}, null, 2));\n    // });\n  }, [webcamRef, setImgSrc]); // const capture = () => {\n  //     while(true){\n  //         const imageSrc = webcamRef.current.getScreenshot();\n  //         console.log(imageSrc)\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Capture photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WebcamCapture, \"ESwUrLq+HE9liXlylGlqUDf3hvQ=\");\n\n_c = WebcamCapture;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"sources":["/Users/ak/Desktop/CV/avo/frontend/src/webcam.js"],"names":["useCallback","useRef","useState","Webcam","WebcamCapture","props","webcamRef","imgSrc","setImgSrc","capture","imageSrc","current","getScreenshot","client","send"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAqBC,MAArB,EAA6BC,QAA7B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAMC,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMO,OAAO,GAAGT,WAAW,CAAC,MAAM;AAC9B;AACI,UAAMU,QAAQ,GAAGJ,SAAS,CAACK,OAAV,CAAkBC,aAAlB,EAAjB,CAF0B,CAI1B;AACA;;AACAP,IAAAA,KAAK,CAACQ,MAAN,CAAaC,IAAb,CAAkBJ,QAAlB,EAN0B,CAO9B;AAEA;AACA;AACA;AACA;AACA;AAEH,GAf0B,EAexB,CAACJ,SAAD,EAAYE,SAAZ,CAfwB,CAA3B,CAJoC,CAqBpC;AACA;AACA;AACA;AACA;AAEA;;AAGA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,KADT;AAEE,MAAA,GAAG,EAAEF,SAFP;AAGE,MAAA,gBAAgB,EAAC;AAHnB;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAQ,MAAA,OAAO,EAAEG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CAxCI;;GAAML,a;;KAAAA,a","sourcesContent":["import {useCallback, useRef, useState} from 'react'\nimport Webcam from 'react-webcam'\n\nexport const WebcamCapture = (props) => {\n    const webcamRef = useRef(null);\n    const [imgSrc, setImgSrc] = useState(null);\n  \n    const capture = useCallback(() => {\n        // for(let i=0; i<10000; i++){\n            const imageSrc = webcamRef.current.getScreenshot();\n        \n            // console.log(imageSrc)\n            // setImgSrc(imageSrc);\n            props.client.send(imageSrc)\n        // }\n        \n        // convertURIToImageData(imageSrc).then(function(imageData) {\n        //     // Here you can use imageData\n        //     console.log(imageData);\n        //     props.client.send(JSON.stringify({\"image\":imageData}, null, 2));\n        // });\n        \n    }, [webcamRef, setImgSrc]);\n\n    // const capture = () => {\n    //     while(true){\n    //         const imageSrc = webcamRef.current.getScreenshot();\n    //         console.log(imageSrc)\n    //     }\n        \n    // }\n  \n\n    return (\n      <>\n        <Webcam\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n        />\n        <button onClick={capture}>Capture photo</button>\n      </>\n    );\n  };\n  \n  \n  "]},"metadata":{},"sourceType":"module"}